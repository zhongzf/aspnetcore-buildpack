#!/usr/bin/env bash
# bin/compile <build-dir> <cache-dir>

# fail fast
set -e

if [ $STACK != "cedar-14" ]; then
	echo "Stack ${STACK} not supported" && exit 1
fi

BUILD_DIR=$1
CACHE_DIR=$2
ENV_DIR=$3
BUILDPACK_DIR=`cd $(dirname $0); cd ..; pwd`

source $BUILDPACK_DIR/bin/util

echo "Installing the dependencies"
apt_install libunwind8 gettext

# Get .NET Core runtime framework version
RUNTIME_CONFIG=`find ${BUILD_DIR} -type f -name '*.runtimeconfig.json'`
echo $RUNTIME_CONFIG
RUNTIME_FRAMEWORK_VERSION=$(ruby -rjson -e "j = JSON.parse(File.open('${RUNTIME_CONFIG}','r:bom|utf-8').read); unless j['runtimeOptions'].nil? ; puts j['runtimeOptions']['framework']['version'];end")
echo $RUNTIME_FRAMEWORK_VERSION

# Choose different download url
DOTNET_CORE_DOWNLOAD_URL_1_0_3='https://go.microsoft.com/fwlink/?LinkID=836289'
DOTNET_CORE_DOWNLOAD_URL_1_1_0='https://go.microsoft.com/fwlink/?LinkID=834989'
case $RUNTIME_FRAMEWORK_VERSION in 
	"1.0.1"|"1.0.3") DOTNET_CORE_DOWNLOAD_URL=${DOTNET_CORE_DOWNLOAD_URL_1_0_3} ;;
	"1.1.0") DOTNET_CORE_DOWNLOAD_URL=${DOTNET_CORE_DOWNLOAD_URL_1_1_0} ;;
	*) DOTNET_CORE_DOWNLOAD_URL=${DOTNET_CORE_DOWNLOAD_URL_1_1_0} ;;
esac

# Install .NET Core SDK 
mkdir -p "${BUILD_DIR}/dotnet"
curl ${DOTNET_CORE_DOWNLOAD_URL} -Ls | tar xz -C ${BUILD_DIR}/dotnet
ln -s ${BUILD_DIR}/dotnet ${HOME}
export PATH="${HOME}/dotnet:${PATH}"
echo ".NET Core SDK Version"
dotnet --version

# Copy profile.d
mkdir -p ${BUILD_DIR}/.profile.d
cp -n ${BUILDPACK_DIR}/.profile.d/* ${BUILD_DIR}/.profile.d/

# Copy or Create Procfile
LAUNCH_ASSEMBLY_NAME=`basename ${RUNTIME_CONFIG} .runtimeconfig.json`
echo $LAUNCH_ASSEMBLY_NAME
if [ ! -e ${BUILD_DIR}/Procfile ]; then
	cat << EOT >> ${BUILD_DIR}/Procfile
web: dotnet ${LAUNCH_ASSEMBLY_NAME}.dll --server.urls http://+:\$PORT
EOT
fi
cat ${BUILD_DIR}/Procfile
